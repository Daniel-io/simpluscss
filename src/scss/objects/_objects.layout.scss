/* ==========================================================================
   #LAYOUT
   ========================================================================== */










/**
* Grid-like layout system.
*
* The layout object provides us with a column-style layout system. This file
* contains the basic structural elements, but classes should be complemented
* with width utilities, for example:
*
*   <div class="o-layout">
*     <div class="o-layout__item  u-1/2">
*     </div>
*     <div class="o-layout__item  u-1/2">
*     </div>
*   </div>
*
* The above will create a two-column structure in which each column will
* fluidly fill half of the width of the parent. We can have more complex
* systems:
*
*   <div class="o-layout">
*     <div class="o-layout__item  u-1/1  u-1/3@md">
*     </div>
*     <div class="o-layout__item  u-1/2  u-1/3@md">
*     </div>
*     <div class="o-layout__item  u-1/2  u-1/3@md">
*     </div>
*   </div>
*
* The above will create a system in which the first item will be 100% width
* until we enter our medium breakpoint, when it will become 33.333% width. The
* second and third items will be 50% of their parent, until they also become
* 33.333% width at the medium breakpoint.
*
*
*/










/* Default/mandatory classes
   ========================================================================== */










/**
 * 1. Allows us to use the layout object on any type of element.
 * 2. We need to defensively reset any box-model properties.
 * 3. Use the negative margin trick for multi-row grids:
 *    http://csswizardry.com/2011/08/building-better-grid-systems/
 */


 .o-layout {
  display: flex;                        /* 1 */
  flex-wrap: wrap;
  padding: 0;                           /* 2 */
  margin: 0;                            /* 2 */
  list-style-type: none;                /* 1 */
  margin-left: -$global-spacing-unit;
}





/**
* 1. Required in order to combine fluid widths with fixed gutters.
* 2. By default, all layout items are full-width (mobile first).
* 3. Gutters provided by left padding:
*    http://csswizardry.com/2011/08/building-better-grid-systems/
*/


.o-layout__item {
  flex: 1 1 100%;                             /* 1 */
  max-width: 100%;                            /* 1 */
  box-sizing: border-box;                     /* 2 */
  padding-left: $global-spacing-unit;         /* 3 */
}










/* Gutter size modifiers
   ========================================================================== */










.o-layout--fl {
  margin-left: 0;
}

.o-layout--fl > .o-layout__item {
  padding-left: 0;
}





.o-layout--xs {
  margin-left: -$global-spacing-unit-xs;
}

.o-layout--xs > .o-layout__item {
  padding-left: $global-spacing-unit-xs;
}





.o-layout--sm {
  margin-left: -$global-spacing-unit-sm;
}

.o-layout--sm > .o-layout__item {
  padding-left: $global-spacing-unit-sm;
}





.o-layout--lg {
  margin-left: -$global-spacing-unit-lg;
}

.o-layout--lg > .o-layout__item {
  padding-left: $global-spacing-unit-lg;
}





.o-layout--xl {
  margin-left: -$global-spacing-unit-xl;
}

.o-layout--xl > .o-layout__item {
  padding-left: $global-spacing-unit-xl;
}











/* Auto width items
   ========================================================================== */










/**
* Each item grows to fill available space base on distribution amoung the number of items
* Items are stil capable of wrapping
*/


.o-layout--auto > .o-layout__item {
  flex: 1 1 0;
}










/* Equal height columns
   ========================================================================== */










/**
* Stretch all grid items of each row to have an equal-height.
* Please be aware that this modifier class doesnâ€™t take any effect in IE9 and
* below and other older browsers due to the lack of `display: flex` support.
*/





.o-layout--stretch > .o-layout__item{
  display: flex;
  flex-wrap: wrap;
}















