/* ==========================================================================
   #BOX
   ========================================================================== */










/**
 * The box object simply boxes off content. Extend with cosmetic styles in the
 * Components layer.
 *
 * 1. So we can apply the `.o-box` class to naturally-inline elements.
 *
 */

 
.o-box {
  display: block;                   /* 1 */
  padding: $global-spacing-unit;
  @include clearfix;


  @include mq(large) {
    padding: $global-spacing-unit-large;
  }
}

.o-box > *:last-child {
  margin-bottom: 0;
}










/* Size variants
   ========================================================================== */










.o-box--flush {
  padding: 0;
}

.o-box--tiny {
  padding: $global-spacing-unit-tiny;
}

.o-box--small {
  padding: $global-spacing-unit-small;
}

.o-box--large {
  padding: $global-spacing-unit-large;
}

.o-box--huge {
  padding: $global-spacing-unit-huge;
}











/* Style variants
   ========================================================================== */










.o-box--primary {
  color: $white;
  background-color: $color-primary;
}

.o-box--secondary {
  color: $white;
  background-color: $color-secondary;
}

.o-box--tertiary {
  color: $white;
  background-color: $color-tertiary;
}

.o-box--success {
  color: $white;
  background-color: $color-success;
}

.o-box--error {
  color: $white;
  background-color: $color-error;
}

.o-box--tint {
  background-color: $color-tint;
}


